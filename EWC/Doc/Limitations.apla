(
 'General Limitations and Differences'
 '-----------------------------------'
 ''
 '* To start using EWC, you must call:'
 ''
 '  [prefix] EWC.Init mode'
 '  '
 '  Where web can be one of:'
 '     ''desktop'' to run each form in an HTMLRenderer'
 '     ''browser'' to allow a single session from a browser'
 '     ''multi'' to allow multiple sessions from browsers'
 ''
 '  EWC.Init will instantiate functions ∆WC ∆WS etc in the calling namespace, use e.g.'
 '  prefix←''e'' to define eWC eWS etc instead.'
 '  '
 '* If you used ''browser'' or ''multi'', you can now connect a browser to localhost:22322,'
 '  and your application will only work well if it uses one form at a time.'
 '  '
 '* ''multi'' mode should be considered experimental, it can only be initialised from a'
 '  namespace containing a function Init, which must create the first form.'
 '  The namespace will be cloned using ⎕NS for each new session. For example, using the demo'
 '  namespace in multi mode will create namespaces #.demo_1, #.demo_2 etc.'
 '  '
 '* Werify correct installation by typing the following expression:'
 ''
 '       ''F1'' ∆WC ''Form'' ''Hello EWC'''
 '  '
 '* You can also try running demo.Run with a right argument of ''desktop'', ''browser'' or ''multi''.'
 '  Select one of the demos from the dropdown at the top right. Click "Stop" when done.'
 '  '
 '* Options you may want to set before calling EWC.Init:'
 ''
 '     EWC.PORT←22322            ⍝ Choose the port to use, 22322 is the default'
 '  '
 '  The variable EWC.RESOURCES should be set before calling EWC.Init, to declare the location of'
 '  images or other resources. For example:'
 '  '
 '     EWC.RESOURCES←1 2⍴''images'' ''/tmp/myapp/images'''
 '        '
 '  Now, any image within /tmp/myapp/images can be referred to as /images/filename.'
 '  You can define as many resources as you like, one per row.'
 ''
 '* Note that in EWC all images are defined using file names. The ImageList object has a new'
 '  property "Files", which defines the list of images, rather than relying on the creation of'
 '  child icons and bitmap objects to load images into the list. Image files will be loaded on'
 '  demand by the JavaScript client.'
 ''
 '* Coord must be (and defaults to) "Pixel"  '
 (' '⋄)
 '* Setting properties must be done using ⎕WC and ⎕WS, assignment is not supported. This is on the ToDo list.'
 '                                                    '
 '* Up-to-date property values must be retrieved using ⎕WG. There are variables in the spaces that correspond to'
 '  GUI objects, but values are not kept up-to-date when the user manipulates the GUI. This is expected to'
 '  change soon.'
 ''
 '* There is very experimental support for processing callbacks when at immediate execution mode, this '
 '  creates a Timer object in the namespace which called EWC.Init, called EWCTIMER.'
 ''
 ''
)
