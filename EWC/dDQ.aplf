 {R}←∆DQ names;⎕TRAP;caller;class;type;HR;timers;event;done;interrupt;tkn;m;i;types;z;modal;ID;conn;e;n;id;obs;pre

 ⎕TRAP←0 'S'
 names←,⊆names
 caller←findCaller
 'N'Log'findCaller returned ',⍕caller
 names←caller removeCaller¨names
 modal←0

 :If ~∧/names∊'.' '#'
     ⎕SIGNAL(∨/~(caller.⎕NC z←names,¨⊂'.Type')∊2.1 ¯2.6)/11
     types←,⊆caller⍎⍕z
     :If modal←∧/types∊modalClasses
         'Only one modal object at a time'⎕SIGNAL(1≠≢names)/11
         R←,⊆dWX(⊃names)'OnlyDQ'(⊃names)
         :If (1↑⊃R)≢1↑names ⍝ Validate echo-back
             'E' Log 'Internal error: OnlyDQD returned an unexpected result: ',,⍕R
             'INTERNAL ERROR' ⎕SIGNAL 11
         :EndIf
         :If USEHR
             ((⊃names),'.HR')caller.⎕WS('Visible' 1)('Size'(HRBorder+1↓⊃R))
         :EndIf

     :EndIf
     :If ∨/m←types∊nativeClasses ⍝ TCPSocket or other things(?)
         'May not mix DQ of native and EWC classes'⎕SIGNAL(0∊m)/11
         →0⊣R←caller.⎕DQ names
     :EndIf
 :EndIf

 obs←,⊂(pre←(⍕caller),'.'),'_EWC.TIMER' ⍝ The object which implements our message queue
 :If 9≠⎕NC ⊃obs ⍝ If it was not created in make_EWC
     make_EWC_TIMER caller._EWC
 :EndIf

 :If USEHR ⍝ In Desktop mode, also DQ all the HTMLRenderers
     obs,←pre∘,¨names,¨(modal∨types∊⊂'Form')/¨⊂'.HR'
 :EndIf

 done←interrupt←0
 (ID conn)←getConnection caller(⊃names)
 tkn←DQ_TOKENBASE+TOKENSTEP×1⌈ID×MODE=2

 :Trap 1000
     :Repeat
         :If 0=≢QUEUEIDS
         :OrIf ~∨/m←QUEUEIDS∊names
             :If 0≠≢z←⎕DQ obs        ⍝ Should only exit on 1002 to TIMER
                 :If (2↑z)≢(1↑obs),1002
                     'W'Log'Unexpected message received in DQ: ',,⍕2↑z
                     →IGNORE
                 :EndIf
                 R←3⊃z
                 :If 'N'∊LOGMODES
                     'N'Log'DQ of token ',(⍕tkn),': ',1 ⎕JSON⍠'HighRank' 'Split'⊢R
                 :EndIf
                 :If MODE=2
                     R.CodeLocation←⍕caller
                 :EndIf
                 :If 0=caller.⎕NC R.Event.ID
                     'W'Log'Ignoring event on non-existent object ',R.Event.ID
                 :Else
                     QUEUEIDS,←⊂{(¯1+⍵⍳'.')↑⍵}R.Event.ID ⋄ QUEUEDATA,←R
                 :EndIf
             :EndIf
         :EndIf
 IGNORE:

         :If (≢QUEUEIDS)≥i⊣n←(QUEUEIDS,⊂⍬)[i]⊣e←(QUEUEDATA,⊂⍬)[i]⊣i←⌊/QUEUEIDS⍳names
             (QUEUEIDS QUEUEDATA)←(m←(⍳≢QUEUEIDS)≠QUEUEIDS⍳n)∘/¨QUEUEIDS QUEUEDATA
             done←processEvent e
         :EndIf
         done∨←0∊caller.⎕NC names
     :Until done
 :Else
     interrupt←1
 :EndTrap

 :If 0≠≢R
     z←⊢/R
     :If 9=⎕NC'z.Event'
         R←z.Event.((ID EventName),{6::⍵ ⋄ Info}⍬) ⍝ /// Need a proper queue
     :Else
         ∘∘∘
     :EndIf ⍝ Else return R as is
 :EndIf

 :If modal ⍝ Exit from Modal mode
     :If USEHR
         ((⊃names),'.HR')caller.⎕WS'Visible' 0
     :EndIf
     z←dWX(⊃names)'OnlyDQ'
 :EndIf
 'INTERRUPT'⎕SIGNAL interrupt/999
