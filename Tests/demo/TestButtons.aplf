 r←TestButtons sink;⎕TRAP;fruit;addon;t;z;f_ctl;lbl;f_status;fruit_name;c;exp;addon_ids;addons;addon_names;sel_a
 r←''
 :If 0≡f_status←#.S.Find'F1.STATUS'
     r←'Cannot find F1.STATUS (#136)'
     →end    ⍝ not much we can sensibly test w/o the ability to control the feedback!
 :EndIf
 addon_ids←'F1.ICE' 'F1.CHOKO'
 ⍝ label follows or preceds control:
 addon_names←{('XPath'#.S.Find'//input[@id="',⍵,'"]/following-sibling::div | //input[@id="',⍵,'"]/preceding-sibling::div').Text}¨addon_ids
 :For fruit :In (⊂'F1.FRUIT.C'),¨⍕¨⍳3
     {6::⍬ ⋄ c←#.S.Find ⍵ ⋄ c.Selected:c.Click}¨addon_ids  ⍝ make sure all options are unselected
     :If fruit≢''
         z←#.S.Click fruit
         ⎕DL 1   ⍝ bad and ugly hack - but we need to give eWS some time to update the status field, otherwise the test will fail!
         f_ctl←#.S.Find fruit
         lbl←'XPath'#.S.Find'//input[@id="',fruit,'"]/following-sibling::div'   ⍝ the div that immediately follows the input has the label
         fruit_name←lbl.Text                                                    ⍝ read label's text
         t←f_status.Text
         exp←'You selected ',fruit_name
         :If exp Check t
             r,←⊂'Click on ',fruit,' did not generate expected message but "',t,'"'
         :EndIf
     :EndIf
     :For addon :In ¯1+⍳(≢addon_ids)*2
         {6::⍬ ⋄ c←#.S.Find ⍵ ⋄ c.Selected:c.Click}¨addon_ids  ⍝ make sure all options are unselected
         sel_a←2 2⊤addon  ⍝ bit flags for selected addons

         ⍝ get names of addons: the div that immediately follows the input has the label
         :For c :In sel_a/addon_ids
             :If 1 Check #.S.Click c  ⍝ were we able to click the addon?
                 r,←⊂'could not select addon "',c,'"'
             :EndIf
             ⎕DL 1   ⍝ bad and ugly hack - but we need to give eWS some time to update the status field, otherwise the test will fail!
         :EndFor
         t←f_status.Text
         exp←'You selected ',fruit_name,(0<+/sel_a)/' with ',¯5↓∊sel_a/addon_names,¨⊂' and '
         :If exp Check t
             r,⊂'Status ≠ "',exp,'" - found value "',t,'"'
         :EndIf
     :EndFor
 :EndFor
end:
 :If 0<≢r
     r←¯1↓∊(⊆r),¨⎕UCS 10
 :EndIf