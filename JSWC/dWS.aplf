 {R}←Name ∆WS Props;WS;msg;ws;i;z;ref;expr;caller;⎕TRAP;proplist;pname;names;values;PropList;m;class;type;ix;HR
  ⎕TRAP←0 'S'
 :If (⊂,Name)∊,¨'⎕SE' '#' '.' ⍝ Pass WS of System properties through
     →0 ⊣ R←Name ⎕WS Props
 :EndIf

 caller←⊃⎕RSI
 class←classes⍎⎕C type←caller⍎Name,'.Type'
 proplist←⎕C PropList←class.PropList,objProps
 :If (names←⎕C 1↑Props)∊proplist
     values←,⊂1↓Props
 :Else
    :If ∧/(names←⎕C ⊃¨Props)∊proplist
        values←1↓¨Props
    :EndIf
 :EndIf

 :If ~∧/m←(≢proplist)≥proplist⍳names
      Warning 'Unknown properties: ',(~m)/names
     (names values)←m∘/¨names values
 :EndIf

 :If 0≠≢ix←⍸1=≢¨values
     values[ix]←⊃¨values[ix]
 :EndIf

 names←PropList[proplist⍳names] ⍝ Correct case

 :If ~∧/m←names∊class.Supported
     Warning 'Unsupported properties for type ',type,': ',(~m)/names
     (names values)←m∘/¨names values
 :EndIf

 :If type≡'Form'
 :AndIf (≢names)≥i←names⍳⊂'Posn'
 :AndIf 1=≢HR←'HTMLRenderer' ⎕WN caller⍎Name
     (⊃HR) ⎕WS 'Posn' (i⊃values) ⍝ Move the HTMLRenderer instead
     (names values)←(i≠⍳≢names)∘/¨names values
 :EndIf

 WS←⎕NS''
 ws←WS.WS←⎕NS''
 ws.(ID Properties)←Name(⎕NS'')
 :If 0≠≢names
    ⍎'ws.Properties',expr←'.(',(⍕names),')←',(1≠≢values)↓'⊃values'
 :EndIf

 :If USEWIN32
     R←Name caller.⎕WS Props
 :ElseIf 0≠≢names
     expr←'.(',(⍕⎕C names),')←',(1≠≢values)↓'⊃values'
     ⍎(⍕caller),'.',Name,expr ⍝ Update "server-side DOM"
 :EndIf

 :If RECORD ⍝ Collecting lists
     ref←⍎'Classes.',Name ⎕WG 'Type'
     ref.Supported∪←1⊃¨Props
 :EndIf

 msg←⎕JSON⍠'HighRank' 'Split'⊢WS
 :If 0=≢names
     Warning 'Not sending empty WS message: ',msg
     →0
 :EndIf

 :If CONNECTED
     z←CONN WSS.Send ⎕←msg
 :Else
     Warning 'Not connected, need to send: ',msg
 :EndIf
