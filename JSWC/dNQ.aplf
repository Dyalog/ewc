 {R}←{Mode}∆NQ Event;caller;NQ;nq;msg;z;⎕TRAP;ID;conn;name;tkn
 ⎕TRAP←0 'S'
 R←⍬
 caller←⊃⎕RSI
 name←⊃Event
 (ID conn)←getConnection caller name

 (⊃Event)←(2×'#.'≡2↑⊃Event)↓⊃Event

 :If 0=⎕NC'Mode' ⋄ Mode←0 ⋄ :EndIf
 :If (,¨1↑Event)∊,¨'.' '#' '⎕SE' ⍝ Pass NQ to system objects through
     →0 ⊣ R←Mode ⎕NQ Event
 :EndIf

 NQ←⎕NS''
 nq←NQ.NQ←⎕NS''
 nq.(ID Event Info)←(2↑Event),⊂2↓Event

 :If USEWIN32
     R←Mode caller.⎕NQ Event
 :EndIf

 :If (~isChar nq.Event)∨(⊂nq.Event)∊⊂'Close' ⍝ /// This needs to become a configurable list
    nq.EventName←2⊃Event
    nq.⎕EX 'Event'
    NQ.Event←nq
    tkn←DQ_TOKENBASE+TOKENSTEP×ID
    :If 'N'∊LOGMODES
        'N' Log (⍕tkn),' - ',msg←1 ⎕JSON⍠'HighRank' 'Split'⊢NQ
    :EndIf
    →0 ⊣ NQ ⎕TPUT tkn
 :EndIf

 msg←⎕JSON⍠'HighRank' 'Split'⊢NQ

 :If CONNECTED
     z←conn WSS.Send msg
     'T' Log msg
 :Else
     ⎕←msg
 :EndIf
