r←con Handler payload;ns;Event;ID;Info;events;fns;fn;event;z;reqfn;info;sns
 ⎕TRAP←0 'S'
 ⎕←'Received: ',payload

 :If (⊂10↑payload)∊'Initialise' 'Initialize'
     CONN←con
     CONNECTED←1
     :If 2=⎕NC 'IGNORE1Init'
     :AndIf IGNORE1Init≠0
         IGNORE1Init←0
         ⎕←'Ignoring one Initialise'
         :Return
     :EndIf
     fn←reqfn←(10↓payload)~'()'
     fn,←(0=≢fn)/'Initialise'
     :If 3=CODELOCATION.⎕NC fn
         (CODELOCATION⍎fn)&CONNECTED
     :ElseIf 0≠≢reqfn ⍝ Explicit function requested
         ⎕←'Function not found: ',(⍕CODELOCATION),'.',fn
     :EndIf
 :Else
     :Trap 999
         sns←CODELOCATION._JSWC ⍝ Session Namespace
         ns←0 ⎕JSON payload
         :Select ,ns.⎕NL 9
         :Case 'Event'
             ⍝ /// Maybe use a "proper" queue
             ns ⎕TPUT DQ_TOKENBASE+TOKENSTEP×sns.ID
             ⍝ /// Need something better than this from JD
             :If '*'∊1↓⎕STACK[;2] ⍝ A suspension in the client app
             :AndIf 9=sns.⎕NC 'TIMER'
                  sns.⎕NQ 'TIMER' 1001 ⍝ Wake it up
             :EndIf
         :Case 'WG'
             ns ⎕TPUT WG_TOKENBASE+TOKENSTEP×sns.ID
         :Else
             ⎕←'Invalid message received: ',payload
         :EndSelect
     :Else
         ⎕←'Message processing failed:'
         ⎕←↑⎕DMX.DM
     :EndTrap
 :EndIf
